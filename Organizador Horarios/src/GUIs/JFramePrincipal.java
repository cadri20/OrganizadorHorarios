package GUIs;

import fuentes.*;
import java.awt.Color;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import javax.swing.JColorChooser;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.table.DefaultTableModel;
import utils.ArchivoManager;
import utils.ExcelUtils;

/**
 *
 * @author Hp
 */
public class JFramePrincipal extends javax.swing.JFrame {
    ArrayList<Materia> listaMaterias;
    Materia materia;
    Horario horario;
    boolean estaElHorarioOrdenado;
    ResaltadorTabla resaltador;
    private ArchivoManager archivoManager;
    private boolean horarioGuardado = true;
    private boolean listaGuardada = true;
    
    public JFramePrincipal() {
        initComponents();
        listaMaterias = new ArrayList<>();
        materia = new Materia();
        estaElHorarioOrdenado = false;
        ExcelUtils.mapearColores();
        archivoManager = ArchivoManager.getInstance();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jBAgregarMateria = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableListaMaterias1 = new javax.swing.JTable();
        jBBorrarMateria = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTableHorario = new javax.swing.JTable();
        jBGenerarHorario = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jBHorarioOrdenado = new javax.swing.JButton();
        jBAsignarColor = new javax.swing.JButton();
        jBTotalHoras = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jSpCombinaciones = new javax.swing.JSpinner();
        jBMostrarConflictos = new javax.swing.JButton();
        jCBPrioridades = new javax.swing.JCheckBox();
        jBTotalCreditos = new javax.swing.JButton();
        jSPCreditos = new javax.swing.JSpinner();
        jLabel2 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuGuardarHorario = new javax.swing.JMenuItem();
        jMenuCargarHorario = new javax.swing.JMenuItem();
        jMenuGuardarLista = new javax.swing.JMenuItem();
        jMenuCargarLista = new javax.swing.JMenuItem();
        jMenuExportarExcel = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();

        setDefaultCloseOperation(javax.swing.WindowConstants.DO_NOTHING_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosed(java.awt.event.WindowEvent evt) {
                formWindowClosed(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jBAgregarMateria.setText("Agregar Materia");
        jBAgregarMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAgregarMateriaActionPerformed(evt);
            }
        });

        jTableListaMaterias1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Materia", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado", "Prioridad", "Creditos"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class, java.lang.Integer.class, java.lang.Integer.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableListaMaterias1);

        jBBorrarMateria.setText("Borrar Materia");
        jBBorrarMateria.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBorrarMateriaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(229, 229, 229)
                        .addComponent(jBAgregarMateria)
                        .addGap(275, 275, 275)
                        .addComponent(jBBorrarMateria))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 878, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jBAgregarMateria)
                    .addComponent(jBBorrarMateria))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTableHorario.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Materia", "Lunes", "Martes", "Miercoles", "Jueves", "Viernes", "Sabado"
            }
        ));
        jScrollPane1.setViewportView(jTableHorario);

        jBGenerarHorario.setText("Generar Horario");
        jBGenerarHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGenerarHorarioActionPerformed(evt);
            }
        });

        jButton1.setText("Hora Minima");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Hora Maxima");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jBHorarioOrdenado.setText("Ordenar Horario");
        jBHorarioOrdenado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBHorarioOrdenadoActionPerformed(evt);
            }
        });

        jBAsignarColor.setText("Asignar color");
        jBAsignarColor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBAsignarColorActionPerformed(evt);
            }
        });

        jBTotalHoras.setText("Total de horas");
        jBTotalHoras.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTotalHorasActionPerformed(evt);
            }
        });

        jLabel1.setText("Combinaciones a probar");

        jSpCombinaciones.setModel(new javax.swing.SpinnerNumberModel(1, 1, 50, 1));
        jSpCombinaciones.setValue(1);

        jBMostrarConflictos.setText("Mostrar Conflictos");
        jBMostrarConflictos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBMostrarConflictosActionPerformed(evt);
            }
        });

        jCBPrioridades.setText("Organizar con prioridades");

        jBTotalCreditos.setText("Total de creditos");
        jBTotalCreditos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBTotalCreditosActionPerformed(evt);
            }
        });

        jLabel2.setText("Maximo creditos");

        jMenu1.setText("Archivo");

        jMenuGuardarHorario.setText("Guardar Horario");
        jMenuGuardarHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuGuardarHorarioActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuGuardarHorario);

        jMenuCargarHorario.setText("Cargar Horario");
        jMenuCargarHorario.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCargarHorarioActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuCargarHorario);

        jMenuGuardarLista.setText("Guardar Lista");
        jMenuGuardarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuGuardarListaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuGuardarLista);

        jMenuCargarLista.setText("Cargar Lista");
        jMenuCargarLista.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCargarListaActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuCargarLista);

        jMenuExportarExcel.setText("Exportar a Excel");
        jMenuExportarExcel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuExportarExcelActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuExportarExcel);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");
        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jBAsignarColor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBTotalHoras, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBMostrarConflictos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jBTotalCreditos, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(20, 20, 20)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(27, 27, 27)
                        .addComponent(jSpCombinaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jSPCreditos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(64, 64, 64)
                        .addComponent(jBGenerarHorario)
                        .addGap(43, 43, 43)
                        .addComponent(jCBPrioridades)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 952, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(8, 8, 8))
                            .addComponent(jBHorarioOrdenado, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(60, 73, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButton1)
                        .addGap(39, 39, 39)
                        .addComponent(jButton2)
                        .addGap(39, 39, 39)
                        .addComponent(jBHorarioOrdenado)
                        .addGap(53, 53, 53))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel1)
                                    .addComponent(jSpCombinaciones, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel2))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                        .addComponent(jBGenerarHorario)
                                        .addComponent(jCBPrioridades))
                                    .addComponent(jSPCreditos, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(12, 12, 12))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addComponent(jBAsignarColor)
                                .addGap(18, 18, 18)
                                .addComponent(jBTotalHoras)
                                .addGap(18, 18, 18)
                                .addComponent(jBTotalCreditos)
                                .addGap(18, 18, 18)
                                .addComponent(jBMostrarConflictos)
                                .addGap(48, 48, 48))))))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBAgregarMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAgregarMateriaActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) jTableListaMaterias1.getModel();
        String[] filaNula = new String[modelo.getColumnCount()];
        Arrays.fill(filaNula, null);
        modelo.addRow(filaNula);
        listaGuardada = false;
    }//GEN-LAST:event_jBAgregarMateriaActionPerformed

    private void jBGenerarHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGenerarHorarioActionPerformed
        try{
        ArrayList<Materia> listaMateria = (ArrayList) UtilsGUI.tableToList(jTableListaMaterias1);
        horario = getHorarioConMasHoras(listaMateria, (Integer) jSpCombinaciones.getValue());
        UtilsGUI.mostrarHorarioEnTabla(horario, jTableHorario);
        estaElHorarioOrdenado = false;      
        horarioGuardado = false;
        }catch(IllegalArgumentException e){
            JOptionPane.showMessageDialog(this, "No se han agregado materias a la lista","Lista vacía", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_jBGenerarHorarioActionPerformed

    private Horario getHorarioConMasHoras(ArrayList<Materia> materias, int numCombinaciones){
        Horario horarioConMasHoras = null;
        int maxCreditos;
        int valorSP = (Integer) jSPCreditos.getValue();
        if(valorSP == 0){
            maxCreditos = Horario.SIN_MAX_CREDITOS;
        }else
            maxCreditos = valorSP;
        
        for(int i = 1; i <= numCombinaciones; i++){
            Horario horarioObtenido = new Horario(materias, jCBPrioridades.isSelected(), maxCreditos);
            if(horarioConMasHoras == null || horarioObtenido.getTotalHoras() > horarioConMasHoras.getTotalHoras())
                horarioConMasHoras = horarioObtenido;
        }
        
        return horarioConMasHoras;
    }
    private void jMenuGuardarHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuGuardarHorarioActionPerformed
        archivoManager.guardarHorario(horario, archivoManager.obtenerPath("Guardar", archivoManager.extensionHorario));
        horarioGuardado = true;
    }//GEN-LAST:event_jMenuGuardarHorarioActionPerformed

    private void jMenuCargarHorarioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCargarHorarioActionPerformed
        if (!horarioGuardado) {
            int opcionSeleccionada = JOptionPane.showConfirmDialog(this, "El horario actual no se ha guardado, ¿está seguro que quiere cargar otro?", "Datos no guardados", JOptionPane.WARNING_MESSAGE);
            if (opcionSeleccionada == JOptionPane.CANCEL_OPTION) {
                return;
            }
        }
        
        String path = archivoManager.obtenerPath("Abrir", archivoManager.extensionHorario);       
        if(path != null){
            horario = archivoManager.cargarHorario(path);
            UtilsGUI.mostrarHorarioEnTabla(horario, jTableHorario);    
            resaltador = new ResaltadorTabla(horario);
            jTableHorario.setDefaultRenderer(Object.class, resaltador);
            horarioGuardado = true;
        }       
        
    }//GEN-LAST:event_jMenuCargarHorarioActionPerformed

    private void jMenuGuardarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuGuardarListaActionPerformed
        ArrayList<Materia> listaMateria = (ArrayList) UtilsGUI.tableToList(jTableListaMaterias1);
        archivoManager.guardarLista(listaMateria, archivoManager.obtenerPath("Guardar", archivoManager.extensionLista));
        listaGuardada = true;
    }//GEN-LAST:event_jMenuGuardarListaActionPerformed

    private void jMenuCargarListaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCargarListaActionPerformed
        if (!listaGuardada) {
            int opcionSeleccionada = JOptionPane.showConfirmDialog(this, "La lista actual no se ha guardado, ¿está seguro que quiere cargar otro?", "Datos no guardados", JOptionPane.WARNING_MESSAGE);
            if (opcionSeleccionada == JOptionPane.CANCEL_OPTION) {
                return;
            }
        }
        
        String path = archivoManager.obtenerPath("Abrir", archivoManager.extensionLista);
        if(path != null){
            ArrayList<Materia> listaMateria = archivoManager.cargarLista(path);
            UtilsGUI.mostrarListaEnTabla(listaMateria, jTableListaMaterias1);
            listaGuardada = true;
        }
    }//GEN-LAST:event_jMenuCargarListaActionPerformed

    private void jBBorrarMateriaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBorrarMateriaActionPerformed
        int filaSeleccionada = jTableListaMaterias1.getSelectedRow();
        if(filaSeleccionada != -1){
            DefaultTableModel modelo = (DefaultTableModel) jTableListaMaterias1.getModel();
            modelo.removeRow(filaSeleccionada);
        }
            
    }//GEN-LAST:event_jBBorrarMateriaActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        JOptionPane.showMessageDialog(this, "Hora minima: " + horario.getHoraMinima());
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        JOptionPane.showMessageDialog(this, "Hora maxima: " + horario.getHoraMaxima());
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jBHorarioOrdenadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBHorarioOrdenadoActionPerformed
        jTableHorario.setModel(new DefaultTableModel(horario.getHorarioOrdenado(),Horario.titulosColumnasConHoras));
        estaElHorarioOrdenado = true;
    }//GEN-LAST:event_jBHorarioOrdenadoActionPerformed

    private void jMenuExportarExcelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuExportarExcelActionPerformed
        String path = archivoManager.obtenerPath("Guardar", "xlsx");
        if(path == null)
            return;
        
        try {
            ExcelUtils.crearArchivoExcel(jTableHorario, path, "Horario",estaElHorarioOrdenado,horario);
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
            ex.printStackTrace();
        
        }
    }//GEN-LAST:event_jMenuExportarExcelActionPerformed

    private void jBAsignarColorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBAsignarColorActionPerformed
        int filaSeleccionada = jTableHorario.getSelectedRow();
        String nombreMateriaSeleccionada = (String) jTableHorario.getValueAt(filaSeleccionada, 0);
        Materia materiaSeleccionada = horario.getMateria(nombreMateriaSeleccionada);
        Color colorSeleccionado = JColorChooser.showDialog(rootPane, "Selecciona un color", materiaSeleccionada.getColor());
        
        if(colorSeleccionado == null)
            return;
        
        materiaSeleccionada.setColor(colorSeleccionado);
        
        //UtilsGUI.asignarColor(jTableHorario, horario);
        //ResaltadorTabla resaltador = new ResaltadorTabla(filaSeleccionada, 0, colorSeleccionado);
        //jTableHorario.setDefaultRenderer(Object.class, resaltador);
        resaltador = new ResaltadorTabla(horario);
        jTableHorario.setDefaultRenderer(Object.class, resaltador);
        
    }//GEN-LAST:event_jBAsignarColorActionPerformed

    private void jBTotalHorasActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTotalHorasActionPerformed
        int totalHoras = horario.getTotalHoras();
        JOptionPane.showMessageDialog(this, "Numero de horas: " + totalHoras);
    }//GEN-LAST:event_jBTotalHorasActionPerformed

    private void formWindowClosed(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosed

    }//GEN-LAST:event_formWindowClosed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        if(!listaGuardada || !horarioGuardado){
            int opcionSeleccionada = JOptionPane.showConfirmDialog(this, "Algunos datos no se han guardado, ¿esta seguro que quiere salir?", "Datos no guardados", JOptionPane.WARNING_MESSAGE);
            if(opcionSeleccionada == JOptionPane.CANCEL_OPTION)
                return;
        }
        
        System.exit(0);
    }//GEN-LAST:event_formWindowClosing

    private void jBMostrarConflictosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBMostrarConflictosActionPerformed
        Conflictos conflictosPopup = new Conflictos(this, true, horario.getColisiones());
        conflictosPopup.setVisible(true);
    }//GEN-LAST:event_jBMostrarConflictosActionPerformed

    private void jBTotalCreditosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBTotalCreditosActionPerformed
        int totalCreditos = horario.getTotalCreditos();
        JOptionPane.showMessageDialog(this, "Numero de creditos: " + totalCreditos);
    }//GEN-LAST:event_jBTotalCreditosActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            UIManager.setLookAndFeel(UIManager.getSystemLookAndFeelClassName());
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFramePrincipal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFramePrincipal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBAgregarMateria;
    private javax.swing.JButton jBAsignarColor;
    private javax.swing.JButton jBBorrarMateria;
    private javax.swing.JButton jBGenerarHorario;
    private javax.swing.JButton jBHorarioOrdenado;
    private javax.swing.JButton jBMostrarConflictos;
    private javax.swing.JButton jBTotalCreditos;
    private javax.swing.JButton jBTotalHoras;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JCheckBox jCBPrioridades;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuCargarHorario;
    private javax.swing.JMenuItem jMenuCargarLista;
    private javax.swing.JMenuItem jMenuExportarExcel;
    private javax.swing.JMenuItem jMenuGuardarHorario;
    private javax.swing.JMenuItem jMenuGuardarLista;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSpinner jSPCreditos;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner jSpCombinaciones;
    private javax.swing.JTable jTableHorario;
    private javax.swing.JTable jTableListaMaterias1;
    // End of variables declaration//GEN-END:variables
}
